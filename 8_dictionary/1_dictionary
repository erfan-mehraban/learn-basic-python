## پرسش اول کلاس
آرتادخت برای پایان نامه ی دانشگاهش در حال آماده سازی یک مترجم آنلاین هستش. مترجم آنلاینی که آرتادخت داره آماده می کنه یک دیکشنری داره و در انتها این مترجم باید یک جمله را ترجمه کند.

در خط اول ورودی یک عدد n وجود دارد که نمایانگر تعداد کلمات دیکشنری است. هر یک از n خط بعدی شامل دو کلمه است که نشان می دهد کلمه ی دوم معنی کلمه ی اول است. خط بعدی شامل یک جمله است. یک جمله شامل چند کلمه می باشد که با space از هم جدا شده اند. حال شما باید به آرتادخت کمک کنید و مترجمی بنویسید که دیکشنری و جمله ی مربوطه را از ورودی بخواند و جمله را ترجمه کند. در پروسه ی ترجمه اگر کلمه ای در دیکشنری وجود نداشت خود کلمه را در خروجی چاپ کنید. برای اطلاعات بیشتر به ورودی نمونه و خروجی نمونه توجه کنید.

ورودی نمونه:

```
5
hello salam
goodbye khodafez
say goftan
we ma
you shoma
we say goodbye to you tonight
```

خروجی نمونه:

```
ma goftan khodafez to shoma tonight
```

---
برای نوشتن برنامه‌ی بالا اولین راه حلی که به ذهن می‌رسد استفاده از ۲ لیست و گذاشتن کلمات هم معنی در یک اندیس یکسان است.

اما پایتون نوع دیگری از نحوه‌ی ذخیره سازی داده‌ها به همین نام یعنی dictionary دارد.

```
{"hello" : "salam"}
```
در دیکشنری داده‌ها ۲تا ۲تا به صورت جفت‌های کلید و مقدار یا key-value قرار می‌گیرند.
به این صورت که یک داده کلید و داده دیگری مقدار متناظر به آن می‌باشد.
برای مثال در دیکشنری بالا حاوی یک کلید hello و مقدار متناظر به آن یعنی salam است.

در دیکشنری هر مقداری می‌تواند کلید قرار بگیرد و لزومی ندارد که همه‌ی کلید ها از یک جنس باشند:

```
a = {
"hello" : "salam",
2 : "another str",
True : 4
}
```

دیکشنری ها توسط {} مشخص می‌شوند و هر ۲تایی توسط , از دیگری متمایز می‌شوند. همجنین در هر جفت، کلید قبل از : و مقدار نظیر به همان کلید بعد از آن می‌آید.

برای دسترسی به مقدار نظیر به یک کلید می‌توانید مانند آرایه از آن‌ها استفاده کنید.

```
>>> a["hello"]
"salam"
>>> a[2]
"another str"
>>> a[True] = False
>>> a[True]
False
```

دیکشنری‌ها کاربردهای دیگری هم دارد. برای مثال می‌توانید از آن‌ها برای ثبت اطلاعات نظیر به یک داده‌ی غیر عددی استفاده کنید. مثلا قد هر کس را که نظیر به اسمش است ذخیره کنید:

```
{
"Ali" : 100,
"babak" : 180
}
```

برای اضافه کردن یک مقدار جدید به یک دیکشنری از قبل ساخته شده فقط کافی است که مقدار مورد نظر را به کلید متناظر assign کنید.

```
>>> a["new key"] = 0.3
```

برای آن‌که همه‌ی کلیدهای یک دیکشنری را در یک لیست به دست آورید از دستور .keys() بعد از متغیر حاوی دیکشنری استفاده کنید. خروجی این تابع یک dict_keys است که در واقع یک لیست می‌باشد.

```
>>> a.keys()
dict_keys(['hello', 2, True, 'new key'])
```

همچنین برای به دست آوردن لیست مقادیر از .values استفاده کنید

```
>>> a.values()
dict_values(['salam', 'another str', False, 0.3])
```

برای چک کردن اینکه آیا کلیدی در دیکشنری هست یا نه به جای استفاده از تابع keys و سپس کشتن تمامی عناصر لیست می‌توانید از دستور in استفاده کنید
این دستور بسیار سریع تر از روش گفته شده عمل می‌کند.

```
>>> "felan" in a
False
>>> True in a
True
```

مثال: یک متن را بگیرد (تا زمانی که کلمه end وارد نشده است) و بشمرد که از هر کارکتر چند بار استفاده شده است؟

```
def get_content():
    a = ""
    matn = ""
    while a != "end":
        a = input()
        matn += a
    return matn

def count(matn):  
    count_dict = {}
    for l in matn:
        if l in count_dict:
            count_dict[l] += 1
        else:
            count_dict[l] = 1
    return count_dict

def print_counts(count_dict):
    for l in count_dict:
        print(l, count_dict[l])

content = get_content()
content_report = count(content)
print_counts(content_report)
```

همان طور که دیدید برای استفاده از حلقه برای دیکشنری‌ها میتوانید از ۲ روش استفاده کنید:

۱. در روش اول اگر مانند لیست عمل کنیم در حلقه‌ی قور به کلید‌ها دسترسی خواهیم داشت و با دادن کلید به همان دیکشنری به مقادیر نظیر دسترسی خواهیم داشت. (مانند مثال بالا در تابع print_count)

۲. در این روش می‌توان هم زمان و بدون استفاده‌ی مجدد از دیکشنری به کلید و محتوای آن دسترسی داشت. برای این کار باید حلقه روی تابع items دیکشنری عمل کند.

```
for k,v in a.items():
    ...
```

همانطور که لیست‌های تو در تو داشتیم، داشتن دیکشنری‌های تو در تو نیز قابل پیاده سازی است. این قابلیت دست برنامه‌نویس را برای ذخیره‌ی اطلاعات به صورت منظم و آزاد باز می‌گذارد.

```
>>> persons_data = {
    "ali" : {
        "ghad" : 180,
        "blood type" : "O+"
    },
    "babak" : {
        "ghad" : 168,
        "blood type" : "O-"
    },
    "mina" : {
        "ghad" : 170,
        "age" : 16
    },
>>> persons_data["ali"]["blood_type"]
'O+'
```

---
# تمرین در کلاس

سوال اول درسنامه
---
آقای ژوبین آرتاباز رئیس سازمان ملل متحد هست و قراره راجع به انتخاب هیئت رئیسه یک رای گیری انجام بده! دادمهر جمشیدی که مسئول کامپیوتر سازمان ملل هست برنامه ای نوشته که می شمره هر کشور چند رائ رو کسب کرده. شما قراره با نوشتن برنامه ای به دادمهر کمک کنید تا آراء رو شمارش کنه.

خط اول ورودی شامل عدد n هست که تعداد کل آراء رو نمایش میده. هر یک از n خط بعدی شامل اسم یک کشور می باشد. اسم کشورها از حروف کوچک انگلیسی ساخته شده اند.

در خروجی n خط چاپ کنید که شامل تعداد آراء هر یک از کشورها می باشد. نام کشورها را به ترتیب الفبا در خروجی بنویسید. برای اطلاعات بیشتر به ورودی نمونه و خروجی نمونه مراجعه کنید.

ورودی نمونه:

```
5
sara
hamid
ali
sara
sara
```

خروجی نمونه:

```
ali 1
hamid 1
sara 3
```

---
https://quera.ir/problemset/contest/8901/%D8%B3%D8%A4%D8%A7%D9%84%D8%A7%D8%AA-%D9%85%D8%B3%D8%A7%D8%A8%D9%82%D9%87_%D9%84%DB%8C%D9%88%D8%A7%D9%86-%D8%A8%D8%A7%D8%B2%DB%8C
